name: OpenWrt Builder

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Initialize environment
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo apt-get -qq update
        sudo apt-get -qq install -y \
          ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext \
          gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 \
          libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev \
          libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
          libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf \
          python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons \
          squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo apt-get -qq autoremove --purge
        sudo apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$USER /workdir
        export WORKDIR=/workdir

    - name: Clone OpenWrt source
      run: |
        cd $WORKDIR
        git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt
        ln -sf $WORKDIR/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update and install feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download packages
      run: |
        cd openwrt
        make defconfig
        make download -j4 || true

        # 删除异常小文件
        find dl -size -1024c -exec rm -f {} \;

        # 压缩下载包以节省磁盘
        tar -czf $WORKDIR/dl_archive.tar.gz -C dl .
        rm -rf dl
        mkdir dl
        tar -xzf $WORKDIR/dl_archive.tar.gz -C dl

    - name: Compile firmware
      run: |
        cd openwrt
        # 设置 ccache 压缩缓存
        export CCACHE_DIR=$WORKDIR/ccache
        mkdir -p $CCACHE_DIR
        export CCACHE_COMPRESS=1

        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s

        # 设置设备名称和文件日期
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +%Y%m%d%H%M)" >> $GITHUB_ENV

    - name: Organize firmware
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      run: |
        echo "release_tag=$(date +%Y.%m.%d-%H%M)" >> $GITHUB_OUTPUT
        touch release.txt

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Cleanup old workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 2

    - name: Cleanup old releases
      uses: dev-drprasad/delete-tag-and-release@v1.1
      with:
        tag_name: v0.1.2
        delete_release: true
        repo: <owner>/<repoName>
        github_token: ${{ secrets.GITHUB_TOKEN }}
